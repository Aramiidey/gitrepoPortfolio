{"version":3,"file":"static/js/353.e9b4a1a8.chunk.js","mappings":"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","sources":["webpack://react-complete-guide/./src/components/UI/LoadingSpinner.module.css?c5d9","components/UI/LoadingSpinner.js","webpack://react-complete-guide/./src/components/Repos/SingleRepo.module.css?17cf","components/Repos/SingleRepo.js","pages/SingleRepoPage.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"LoadingSpinner_spinner__CTbVS\"};","import classes from \"./LoadingSpinner.module.css\";\r\n\r\nconst LoadingSpinner = () => {\r\n  return <div className={classes.spinner}></div>;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loadspinner\":\"SingleRepo_loadspinner__r1cJ1\",\"error\":\"SingleRepo_error__xGzV8\",\"borderline\":\"SingleRepo_borderline__-qWRm\"};","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./SingleRepo.module.css\"\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n\r\n\r\nconst SingleRepo = ({ repoData, errorMessage, isLoading, allRepos }) => {\r\n\r\n  let allrepos\r\n\r\n  if(allRepos.error || allRepos.length === 0){\r\n   allrepos =  <Col lg={4} md={4} xs={12} className={classes.borderline}>\r\n      <div><p>{allRepos.error}</p></div>\r\n  </Col>\r\n  }else{\r\n    allrepos = (\r\n      <Col lg={4} md={4} xs={12} className={classes.borderline}>\r\n        {allRepos.map((repo) => {\r\n          return (\r\n            <div key={repo.id} className=\"mt-3\">\r\n              <NavLink\r\n                to={`/repositories/${repo.name}`}\r\n                className=\"btn btn-lg btn-secondary\"\r\n              >\r\n                {repo.name}\r\n              </NavLink>\r\n            </div>\r\n          );\r\n        })}\r\n      </Col>\r\n    );\r\n  \r\n  }\r\n\r\n  const repositoryData = (\r\n    <Col lg={8} md={8} xs={12}>\r\n      {repoData && <div>\r\n        <h2 style={{ fontSize: \"50px\", fontWeight: \"600\" }}>{repoData.name}</h2>\r\n        <p>\r\n          Created on:{\" \"}\r\n          <span style={{ fontWeight: \"600\" }}>\r\n            {new Date(repoData.created_at).toDateString()}\r\n          </span>\r\n        </p>\r\n        <p>{repoData.description}</p>\r\n        <div className=\"mt-4\">\r\n          <p>\r\n            Default Branch:\r\n            <span style={{ fontWeight: \"600\" }}>{repoData.default_branch}</span>\r\n          </p>\r\n        </div>\r\n\r\n        <div>\r\n          <p>\r\n            To clone repo run git clone:{\" \"}\r\n            <span style={{ fontWeight: \"600\" }}>{repoData.clone_url}</span> in\r\n            your CLI\r\n          </p>\r\n        </div>\r\n      </div>}\r\n    </Col>\r\n  );\r\n\r\n  const repoLoading = <div className={`centered ${classes.loadspinner}`}>\r\n        <LoadingSpinner />\r\n  </div>\r\n \r\n\r\n const errorData = <>\r\n\r\n  <Col lg={8} md={8} xs={12}>\r\n    <h1 className={`centered ${classes.error}`}>{errorMessage}</h1>\r\n  </Col>\r\n \r\n  </>\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        {isLoading === true && repoLoading}\r\n        {!repoData && isLoading === false && errorMessage && errorData}\r\n        {repoData && repositoryData}    \r\n        {allrepos}\r\n    </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SingleRepo;\r\n","import React, {useState, useEffect} from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { getSingleRepo, getAllRepos } from \"../lib/RepoApi\"\r\nimport SingleRepo from \"../components/Repos/SingleRepo\"\r\n\r\n\r\nconst SingleRepoPage = () => {\r\n    const [singleRepo, setSingleRepo] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [allRepos, setAllRepos] = useState([])\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n    const params = useParams()\r\n    const {reponame} = params\r\n\r\n    const onGetSingleRepo = async () => {\r\n        setIsLoading(true)\r\n        try{\r\n            const response = await getSingleRepo(reponame)\r\n        \r\n            if(!response.data){\r\n                setIsLoading(false)\r\n                setErrorMessage(\"something went wrong\")\r\n            }\r\n\r\n            if(response.error){\r\n                setIsLoading(false)\r\n                setErrorMessage(response.error)\r\n              }\r\n\r\n            setIsLoading(false)\r\n            setSingleRepo(response.data)\r\n\r\n        }catch(error){\r\n           setIsLoading(false)\r\n           console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    const onGetAllRepos = async() => {\r\n        const response = await getAllRepos()\r\n        setAllRepos(response)\r\n    }\r\n\r\n    useEffect(() => {\r\n        onGetSingleRepo()\r\n        onGetAllRepos()\r\n    }, [reponame])\r\n\r\n    return <div>\r\n        <SingleRepo repoData = {singleRepo} errorMessage={errorMessage} isLoading={isLoading} allRepos={allRepos} />\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default SingleRepoPage","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["className","classes","allrepos","repoData","errorMessage","isLoading","allRepos","error","length","Col","lg","md","xs","map","repo","to","name","id","repositoryData","style","fontSize","fontWeight","Date","created_at","toDateString","description","default_branch","clone_url","repoLoading","LoadingSpinner","errorData","Container","fluid","Row","useState","singleRepo","setSingleRepo","setIsLoading","setAllRepos","setErrorMessage","reponame","useParams","onGetSingleRepo","getSingleRepo","response","data","console","log","onGetAllRepos","getAllRepos","useEffect","DEVICE_SIZES","React","ref","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName"],"sourceRoot":""}